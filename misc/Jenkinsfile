pipeline {
    agent any
    stages {
        stage ('Preparation') {
            steps {
               checkout scm
               sh "git rev-parse --short HEAD > .git/commit-id"
               commit_id = readFile('.git/commit-id').trim()
            }
        }
        stage('test') {
            steps {
               nodejs(nodeJSInstallationName: 'nodejs') {
                  sh 'npm install --only=dev'
                  sh 'npm test'
               }
            }
        }

       stage('docker build/push') {
            steps {
               docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                  def app = docker.build("ndomi/docker-nodejs-demo:${commit_id}", '.').push()
               }
            }
       }
    }
    post {
        success {
            slackSend color: '#32cd32', channel: 'slack-jenkins', message: "Pipeline status Status-${currentBuild.currentResult} ${env.JOB_NAME} ${env.BUILD_NUMBER} ${env.BUILD_URL}"
        }
        failure {
            slackSend color: '#FF0000', channel: 'slack-jenkins', message: "Pipeline status Status-${currentBuild.currentResult} ${env.JOB_NAME} ${env.BUILD_NUMBER} ${env.BUILD_URL}"
        }
    }
}
